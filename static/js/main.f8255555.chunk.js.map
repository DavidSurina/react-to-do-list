{"version":3,"sources":["Components/Todo/Todo.js","Components/TodoList/TodoList.js","Components/InputForm/InputForm.js","App.js","index.js"],"names":["Todo","todo","todoList","setTodoList","index","markAsDone","todoUpdatedArray","map","todoObject","id","isDone","deleteTask","event","parseInt","target","parentNode","indexOf","splice","draggableId","toString","provided","snapshot","className","ref","innerRef","draggableProps","dragHandleProps","style","isDragging","draggableStyle","userSelect","background","task","onClick","TodoList","onDragEnd","result","destination","source","reorderedTodos","droppableId","droppableProps","placeholder","InputForm","input","setInput","addTodo","type","minLength","maxLength","required","value","onChange","App","useState","setID","newTodo","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+UAKe,SAASA,EAAT,GAAuD,IAAvCC,EAAsC,EAAtCA,KAAMC,EAAgC,EAAhCA,SAAUC,EAAsB,EAAtBA,YAAaC,EAAS,EAATA,MACpDC,EAAa,WACjB,IAAMC,EAAmBJ,EAASK,KAAI,SAACC,GACrC,OAAIA,EAAWC,KAAOR,EAAKQ,KACH,IAAtBD,EAAWE,OACNF,EAAWE,QAAS,EACpBF,EAAWE,QAAS,EAClBF,GAEAA,KAGXL,EAAYG,IAGRK,EAAa,SAACC,GAClBV,EAASK,KAAI,SAACC,GACZ,GAAGA,EAAWC,KAAOI,SAASD,EAAME,OAAOC,WAAWN,IAAK,CACzD,IAAML,EAAQF,EAASc,QAAQR,GAC/BN,EAASe,OAAOb,EAAO,OAG3BD,EAAY,YAAID,KAoBlB,OACE,cAAC,IAAD,CAAyBgB,YAAajB,EAAKQ,GAAGU,WAAYf,MAAOA,EAAjE,SACG,SAACgB,EAAUC,GAAX,OACC,0DACEZ,GAAIR,EAAKQ,GACTa,UAAU,OACVC,IAAKH,EAASI,UACVJ,EAASK,gBACTL,EAASM,iBALf,IAMEC,OAfcC,EAgBZP,EAASO,WAhBeC,EAiBxBT,EAASK,eAAeE,MAjBb,aACnBG,WAAY,OACZC,WAAYH,EAAa,UAAY,WAClCC,IAMC,UAWE,mBACEP,WACkB,IAAhBrB,EAAKS,OACD,qBACA,sBAJR,SAQGT,EAAK+B,MAFD/B,EAAKQ,IAIZ,oCACEwB,QAAS5B,EACTiB,UAAW,4BAFb,aAIoB,IAAhBrB,EAAKS,OACD,2BACA,4BAGR,wBACEuB,QAAStB,EACTW,UAAU,qCAzCC,IAACM,EAAYC,IAOhB5B,EAAKQ,I,MCxCV,SAASyB,EAAT,GAA8C,IAA1BhC,EAAyB,EAAzBA,SAAUC,EAAe,EAAfA,YAO3C,OACE,cAAC,IAAD,CAAiBgC,UAPK,SAACC,GACvB,GAAKA,EAAOC,YAAZ,CADkC,MAETnC,EAASe,OAAOmB,EAAOE,OAAOlC,MAAO,GAAvDmC,EAF2B,oBAGlCrC,EAASe,OAAOmB,EAAOC,YAAYjC,MAAO,EAAGmC,KAI7C,SACE,cAAC,IAAD,CAAWC,YAAY,mBAAvB,SACG,SAACpB,GAAD,OACC,8CACEE,UAAU,kCACNF,EAASqB,gBAFf,IAGElB,IAAKH,EAASI,SAHhB,UAKGtB,EAASK,KAAI,SAACN,EAAMG,GACnB,OACE,cAACJ,EAAD,CACEI,MAAOA,EACPH,KAAMA,EACNC,SAAUA,EACVC,YAAa,SAACD,GAAD,OAAcC,EAAYD,SAI5CkB,EAASsB,qB,MC/BP,SAASC,EAAT,GAAkD,IAA7BC,EAA4B,EAA5BA,MAAOC,EAAqB,EAArBA,SAAUC,EAAW,EAAXA,QACnD,OACE,uBAAMxB,UAAU,YAAhB,UACE,uBACEb,GAAG,cACHsC,KAAK,OACLC,UAAU,IACVC,UAAU,KACVP,YAAY,0BACZQ,UAAQ,EACRC,MAAOP,EACPQ,SAAU,SAACxC,GAAD,OAAWiC,EAASjC,EAAME,OAAOqC,UAE7C,wBAAQ7B,UAAU,gBAAgBW,QAASa,EAA3C,oBCPS,SAASO,IAAO,IAAD,EACIC,mBAAS,IADb,mBACrBpD,EADqB,KACXC,EADW,OAEJmD,mBAAS,IAFL,mBAEvBV,EAFuB,KAEhBC,EAFgB,OAGVS,mBAAS,GAHC,mBAGvB7C,EAHuB,KAGnB8C,EAHmB,KAmB5B,OACE,sBAAKjC,UAAU,aAAf,UACE,oBAAIA,UAAU,eAAd,uBACA,cAACqB,EAAD,CACEG,QAlBU,WACd,GAAGF,EAAM,CACPW,IAAQ9C,GAER,IAAM+C,EAAU,CACd/C,GAAIA,EACJuB,KAAMY,EACNlC,QAAQ,GAEVP,EAAY,GAAD,mBAAKD,GAAL,CAAesD,KAC1BX,EAAS,MASPD,MAAOA,EACPC,SAAU,SAACD,GAAD,OAAWC,EAASD,MAEhC,cAACV,EAAD,CACEhC,SAAUA,EACVC,YAAa,SAACD,GAAD,OAAcC,EAAYD,SCjC/CuD,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACN,EAAD,MAEFO,SAASC,eAAe,W","file":"static/js/main.f8255555.chunk.js","sourcesContent":["import { Draggable } from \"react-beautiful-dnd\";\r\n\r\n// Import css files\r\nimport \"./todo.css\";\r\n\r\nexport default function Todo({ todo, todoList, setTodoList, index }) {\r\n  const markAsDone = () => {\r\n    const todoUpdatedArray = todoList.map((todoObject) => {\r\n      if (todoObject.id === todo.id) {\r\n        todoObject.isDone === true\r\n          ? (todoObject.isDone = false)\r\n          : (todoObject.isDone = true);\r\n        return todoObject;\r\n      } else {\r\n        return todoObject;\r\n      }\r\n    });\r\n    setTodoList(todoUpdatedArray);\r\n  };\r\n\r\n  const deleteTask = (event) => {\r\n    todoList.map((todoObject) => {\r\n      if(todoObject.id === parseInt(event.target.parentNode.id)) {\r\n        const index = todoList.indexOf(todoObject);\r\n        todoList.splice(index, 1);\r\n      }\r\n    });\r\n    setTodoList([...todoList]);\r\n  };\r\n\r\n/*\r\n  const deleteTask = () => {\r\n    const updated = todoList.map((todoObject) => {\r\n      if(todoObject.id !== todo.id) {\r\n        return todoObject;\r\n      }\r\n    });\r\n    setTodoList([updated]);\r\n  };\r\n*/\r\n\r\n  const getItemStyle = (isDragging, draggableStyle) => ({\r\n    userSelect: \"none\",\r\n    background: isDragging ? \"#333944\" : \"#1f232a\",\r\n    ...draggableStyle,\r\n  });\r\n\r\n  return (\r\n    <Draggable key={todo.id} draggableId={todo.id.toString()} index={index}>\r\n      {(provided, snapshot) => (\r\n        <div\r\n          id={todo.id} \r\n          className=\"task\"\r\n          ref={provided.innerRef}\r\n          {...provided.draggableProps}\r\n          {...provided.dragHandleProps}\r\n          style={getItemStyle(\r\n            snapshot.isDragging,\r\n            provided.draggableProps.style\r\n          )}\r\n        >\r\n          <p\r\n            className={\r\n              todo.isDone === true\r\n                ? \"task-desc finished\"\r\n                : \"task-desc to-finish\"\r\n            }\r\n            key={todo.id}\r\n          >\r\n            {todo.task}\r\n          </p>\r\n          <button\r\n            onClick={markAsDone}\r\n            className={\"task-button fas fa-check\"}\r\n            className={\r\n              todo.isDone === false\r\n                ? \"task-button fas fa-check\"\r\n                : \"task-button fas fa-undo\"\r\n            }\r\n          ></button>\r\n          <button\r\n            onClick={deleteTask}\r\n            className=\"task-button far fa-trash-alt\"\r\n          ></button>\r\n        </div>\r\n      )}\r\n    </Draggable>\r\n  );\r\n}\r\n","import { DragDropContext, Droppable } from \"react-beautiful-dnd\";\r\n\r\n// Import components\r\nimport Todo from \"../Todo/Todo\";\r\n\r\n// Import css files\r\nimport \"./todo-list.css\";\r\n\r\nexport default function TodoList({ todoList, setTodoList }) {\r\n  const handleOnDragEnd = (result) => {\r\n    if (!result.destination) return;\r\n    const [reorderedTodos] = todoList.splice(result.source.index, 1);\r\n    todoList.splice(result.destination.index, 0, reorderedTodos);\r\n  };\r\n\r\n  return (\r\n    <DragDropContext onDragEnd={handleOnDragEnd}>\r\n      <Droppable droppableId=\"task-droppableId\">\r\n        {(provided) => (\r\n          <div\r\n            className=\"droppableId outer-task-wrapper\"\r\n            {...provided.droppableProps}\r\n            ref={provided.innerRef}\r\n          >\r\n            {todoList.map((todo, index) => {\r\n              return (\r\n                <Todo\r\n                  index={index}\r\n                  todo={todo}\r\n                  todoList={todoList}\r\n                  setTodoList={(todoList) => setTodoList(todoList)}\r\n                />\r\n              );\r\n            })}\r\n            {provided.placeholder}\r\n          </div>\r\n        )}\r\n      </Droppable>\r\n    </DragDropContext>\r\n  );\r\n}\r\n","// Import css files\r\nimport \"./input-form.css\";\r\n\r\nexport default function InputForm({ input, setInput, addTodo }) {\r\n  return (\r\n    <form className=\"task-form\">\r\n      <input\r\n        id=\"input-field\"\r\n        type=\"text\"\r\n        minLength=\"4\"\r\n        maxLength=\"45\"\r\n        placeholder=\"What do you want to do?\"\r\n        required\r\n        value={input}\r\n        onChange={(event) => setInput(event.target.value)}\r\n      />\r\n      <button className=\"submit-button\" onClick={addTodo}>\r\n        Add\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\n\r\n// import css\r\nimport \"./app.css\";\r\n\r\n// components\r\nimport TodoList from \"./Components/TodoList/TodoList\";\r\nimport InputForm from \"./Components/InputForm/InputForm\";\r\n\r\nexport default function App() {\r\n  const [todoList, setTodoList] = useState([]);\r\n  let [input, setInput] = useState(\"\");\r\n  let [id, setID] = useState(0);\r\n\r\n  const addTodo = () => {\r\n    if(input){\r\n      setID(++id);\r\n\r\n      const newTodo = {\r\n        id: id,\r\n        task: input,\r\n        isDone: false,\r\n      };\r\n      setTodoList([...todoList, newTodo]);\r\n      setInput(\"\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"to-do-list\">\r\n      <h1 className=\"main-heading\">TODO List</h1>\r\n      <InputForm\r\n        addTodo={addTodo}\r\n        input={input}\r\n        setInput={(input) => setInput(input)}\r\n      />\r\n      <TodoList\r\n        todoList={todoList}\r\n        setTodoList={(todoList) => setTodoList(todoList)}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}